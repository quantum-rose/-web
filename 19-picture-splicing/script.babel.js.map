{"version":3,"sources":["script.js"],"names":["Puzzle","_images","val","_imageIndex","_changeBackgroundImage","elem","width","height","images","piecesNum","levels","id","parseInt","Math","random","toString","dataset","style","position","top","left","opacity","$backgroundImage","document","createElement","head","append","maxOffsetX","maxOffsetY","_preload","cx","cy","$style","innerText","_compressCss","pieces","i","piece","translateX","translateY","_setPieceStyle","isClicked","addEventListener","classList","add","animatedCount","contains","imageIndex","length","reset","requestAnimationFrame","remove","offsetXRatio","offsetYRatio","forEach","zIndex","transform","bind","floor","sizeRandom","radiusRandom","rad","PI","cos","sin","backgroundPosition","animationDelay","css","replace","match","trim","loadedCount","onLoad","transition","ontransitionend","removeEventListener","image","img","src","size","min","window","innerWidth","innerHeight","puzzle","querySelector","Date","now","init","e","parallax","clientX","clientY"],"mappings":"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","sourcesContent":["class Puzzle {\r\n    pieces = []; // 所有碎片\r\n\r\n    _images = [];\r\n    get images() {\r\n        return this._images;\r\n    }\r\n    set images(val) {\r\n        this._images = val;\r\n        this._imageIndex = 0;\r\n        this._changeBackgroundImage();\r\n    }\r\n\r\n    _imageIndex = 0;\r\n    get imageIndex() {\r\n        return this._imageIndex;\r\n    }\r\n    set imageIndex(val) {\r\n        this._imageIndex = val;\r\n        this._changeBackgroundImage();\r\n    }\r\n\r\n    constructor(elem, width, height, images = [], piecesNum = 160, levels = 8) {\r\n        this.elem = elem;\r\n        const id = (this.id = parseInt(Math.random() * (0xffffffff - 0xfffffff) + 0xfffffff).toString(16));\r\n        elem.dataset[id] = '';\r\n        elem.style.position = 'relative';\r\n        elem.style.top = '0';\r\n        elem.style.left = '0';\r\n        elem.style.opacity = '0';\r\n\r\n        this.$backgroundImage = document.createElement('style');\r\n        document.head.append(this.$backgroundImage);\r\n\r\n        this.width = width;\r\n        this.maxOffsetX = width / 20;\r\n        this.height = height;\r\n        this.maxOffsetY = height / 20;\r\n\r\n        this.images = images;\r\n        this._preload();\r\n\r\n        this.piecesNum = piecesNum;\r\n        this.levels = levels;\r\n\r\n        this.cx = width / 2;\r\n        this.cy = height / 2;\r\n\r\n        const $style = document.createElement('style');\r\n        $style.innerText = this._compressCss(`\r\n            [data-${id}] > * {\r\n                background-size: ${width}px ${height}px;\r\n                background-repeat: no-repeat;\r\n                position: absolute;\r\n                box-shadow: 0 0 20px 6px rgba(0, 0, 0, 0.4);\r\n            }\r\n            [data-${id}].in > * {\r\n                animation: in-${id} 0.3s ease-out backwards;\r\n            }\r\n            [data-${id}].out > * {\r\n                animation: out-${id} 0.3s ease-out forwards;\r\n            }\r\n            @keyframes in-${id} {\r\n                from {\r\n                    opacity: 0;\r\n                    transform: translate3d(${-width}px, 0, 0) scale(1, 0);\r\n                }\r\n            }\r\n            @keyframes out-${id} {\r\n                to {\r\n                    opacity: 0;\r\n                    transform: translate3d(${width}px, 0, 0) scale(1, 0);\r\n                }\r\n            }\r\n        `);\r\n        document.head.append($style);\r\n    }\r\n\r\n    init() {\r\n        const { elem, pieces, piecesNum, images } = this;\r\n\r\n        for (let i = 0; i < piecesNum; i++) {\r\n            const piece = (pieces[i] = {\r\n                translateX: 0,\r\n                translateY: 0,\r\n            });\r\n            piece.elem = document.createElement('div');\r\n            this._setPieceStyle(piece, i);\r\n            elem.append(piece.elem);\r\n        }\r\n\r\n        let isClicked = false;\r\n        elem.addEventListener('click', () => {\r\n            if (!isClicked) {\r\n                isClicked = true;\r\n                elem.classList.add('out');\r\n            }\r\n        });\r\n        let animatedCount = 0;\r\n        elem.addEventListener('animationend', () => {\r\n            animatedCount++;\r\n            if (animatedCount === piecesNum) {\r\n                animatedCount = 0;\r\n                if (elem.classList.contains('out')) {\r\n                    this.imageIndex = (this.imageIndex + 1) % images.length;\r\n                    this.reset();\r\n                    requestAnimationFrame(() => {\r\n                        elem.classList.remove('out');\r\n                        elem.classList.add('in');\r\n                    });\r\n                } else if (elem.classList.contains('in')) {\r\n                    elem.classList.remove('in');\r\n                    isClicked = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    parallax(offsetXRatio, offsetYRatio) {\r\n        const { maxOffsetX, maxOffsetY, levels, piecesNum } = this;\r\n        this.pieces.forEach((piece, i) => {\r\n            piece.translateX = offsetXRatio * maxOffsetX * (piece.zIndex / levels + i / piecesNum); // 层级越高、索引越大，偏移量越大\r\n            piece.translateY = offsetYRatio * maxOffsetY * (piece.zIndex / levels + i / piecesNum);\r\n            piece.elem.style.transform = `translate3d(${piece.translateX}px,${piece.translateY}px,0)`;\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.pieces.forEach(this._setPieceStyle.bind(this));\r\n    }\r\n\r\n    _changeBackgroundImage() {\r\n        this.$backgroundImage.innerText = this._compressCss(`\r\n            [data-${this.id}] > * {\r\n                background-image: url(${this.images[this.imageIndex]});\r\n            }\r\n        `);\r\n    }\r\n\r\n    _setPieceStyle(piece, i) {\r\n        const { cx, cy, levels, piecesNum } = this;\r\n\r\n        const style = piece.elem.style;\r\n\r\n        const zIndex = (piece.zIndex = style.zIndex = Math.floor((i / piecesNum) ** (1 / 3) * levels + 1)); // 非均匀分布，层级越高，碎片数量越多\r\n\r\n        const sizeRandom = Math.random();\r\n        const width = (piece.width = cx * ((sizeRandom + levels - zIndex) / levels)); // 层级越高，尺寸越小\r\n        const height = (piece.height = cy * ((sizeRandom + levels - zIndex) / levels));\r\n        style.width = width + 'px';\r\n        style.height = height + 'px';\r\n\r\n        const radiusRandom = Math.random();\r\n        const rad = Math.random() * Math.PI * 2; // 随机的角度，碎片将分布在容器的内切椭圆中\r\n        const left = (piece.left = cx * ((radiusRandom + zIndex - 1) / levels) * Math.cos(rad) - width / 2); // 层级越高，距离中心越远\r\n        const top = (piece.top = cy * ((radiusRandom + zIndex - 1) / levels) * Math.sin(rad) - height / 2);\r\n        style.left = left + 'px';\r\n        style.top = top + 'px';\r\n        style.backgroundPosition = `${-left - cx}px ${-top - cy}px`;\r\n        style.animationDelay = (Math.random() + i / piecesNum) * 0.5 + 's';\r\n    }\r\n\r\n    _compressCss(css) {\r\n        return css\r\n            .replace(/\\s{2,}/, ' ')\r\n            .replace(/\\s*[{};,>~=-]\\s*|[(\\[:]\\s*|\\s*[)\\]]/g, match => match.trim())\r\n            .trim();\r\n    }\r\n\r\n    _preload() {\r\n        let loadedCount = 0;\r\n        const onLoad = function () {\r\n            loadedCount++;\r\n            if (loadedCount === this.images.length) {\r\n                this.elem.style.transition = 'opacity 0.2s linear';\r\n                this.elem.style.opacity = '1';\r\n                this.elem.addEventListener('transitionend', function ontransitionend() {\r\n                    this.style.transition = '';\r\n                    this.style.opacity = '';\r\n                    this.removeEventListener('transitionend', ontransitionend);\r\n                });\r\n            }\r\n        };\r\n        this.images.forEach(image => {\r\n            const img = document.createElement('img');\r\n            img.src = image;\r\n            img.addEventListener('load', onLoad.bind(this));\r\n        });\r\n    }\r\n}\r\n\r\nconst size = Math.min(window.innerWidth, window.innerHeight);\r\nconst puzzle = new Puzzle(document.querySelector('.box'), size, size, [\r\n    './img/bg1.jpg',\r\n    './img/bg2.jpg',\r\n    './img/bg3.jpg',\r\n]);\r\npuzzle.imageIndex = Date.now() % 3;\r\npuzzle.init();\r\n\r\nwindow.addEventListener('mousemove', function (e) {\r\n    puzzle.parallax(1 - (2 * e.clientX) / window.innerWidth, 1 - (2 * e.clientY) / window.innerHeight);\r\n});\r\n"],"file":"script.babel.js"}