{"version":3,"sources":["script.js"],"names":["cvs","document","querySelector","Particle","isMouse","cvsCtx","x","y","vx","vy","lastTime","Date","now","r","ax","ay","t","beginPath","fillStyle","arc","Math","PI","fill","closePath","ParticleGrid","width","height","speed","connectDistance","rad","i","floor","random","cos","sin","clearRect","fillRect","particles","filter","item","alive","render","total","length","push","randomParticle","_interact","requestAnimationFrame","_onEnterFrame","e","offsetX","offsetY","w","offsetWidth","h","offsetHeight","mouse","flag","getContext","window","devicePixelRatio","addEventListener","_init","_onMouseMove","_onClick","l","a","j","b","d","c","atan2","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke"],"mappings":"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","sourcesContent":["const cvs = document.querySelector('#cvs');\r\n\r\n/* 粒子 */\r\nclass Particle {\r\n    cvsCtx = null;\r\n    r = 1; // 半径\r\n    x = 0; // 横坐标\r\n    y = 0; // 纵坐标\r\n    vx = 0; // 水平速度\r\n    vy = 0; // 垂直速度\r\n    ax = 0; // 水平加速度\r\n    ay = 0; // 垂直加速度\r\n    lastTime = 0;\r\n    isMouse = false;\r\n\r\n    constructor({ isMouse = false, cvsCtx, x, y, vx, vy }) {\r\n        this.isMouse = isMouse;\r\n        this.cvsCtx = cvsCtx;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.lastTime = Date.now();\r\n    }\r\n\r\n    render() {\r\n        if (!this.isMouse) {\r\n            const { cvsCtx, r, vx, vy, ax, ay, lastTime } = this;\r\n            const t = (Date.now() - lastTime) / 1000;\r\n            this.x += vx * t + ax * t ** 2 * 0.5;\r\n            this.y += vy * t + ay * t ** 2 * 0.5;\r\n            // this.vx += ax * t;\r\n            // this.vy += ay * t;\r\n            cvsCtx.beginPath();\r\n            cvsCtx.fillStyle = 'rgba(255,255,255,1)';\r\n            cvsCtx.arc(this.x, this.y, r, 0, Math.PI * 2, false);\r\n            cvsCtx.fill();\r\n            cvsCtx.closePath();\r\n        }\r\n        this.lastTime = Date.now();\r\n    }\r\n}\r\n\r\n/* 粒子网格 */\r\nclass ParticleGrid {\r\n    cvs = null;\r\n    cvsCtx = null;\r\n    width = 0;\r\n    height = 0;\r\n    speed = 100;\r\n    connectDistance = 200;\r\n    particles = [];\r\n    flag = false;\r\n\r\n    get total() {\r\n        return (this.width * this.height) ** 0.5 * 0.24;\r\n    }\r\n\r\n    get randomParticle() {\r\n        const { cvsCtx, width, height, speed, connectDistance } = this;\r\n        let x, y, rad;\r\n        const i = Math.floor(Math.random() * 4);\r\n        switch (i) {\r\n            case 0:\r\n                rad = Math.random() * Math.PI;\r\n                x = Math.random() * (width + 2 * connectDistance) - connectDistance;\r\n                y = -connectDistance;\r\n                break;\r\n            case 1:\r\n                rad = (Math.random() + 0.5) * Math.PI;\r\n                x = width + connectDistance;\r\n                y = Math.random() * (height + 2 * connectDistance) - connectDistance;\r\n                break;\r\n            case 2:\r\n                rad = (Math.random() - 1) * Math.PI;\r\n                x = Math.random() * (width + 2 * connectDistance) - connectDistance;\r\n                y = height + connectDistance;\r\n                break;\r\n            case 3:\r\n                rad = (Math.random() - 0.5) * Math.PI;\r\n                x = -connectDistance;\r\n                y = Math.random() * (height + 2 * connectDistance) - connectDistance;\r\n                break;\r\n        }\r\n        return new Particle({\r\n            cvsCtx,\r\n            x,\r\n            y,\r\n            vx: Math.cos(rad) * speed,\r\n            vy: Math.sin(rad) * speed,\r\n        });\r\n    }\r\n\r\n    constructor(cvs) {\r\n        this.cvs = cvs;\r\n        this.cvsCtx = cvs.getContext('2d');\r\n        this.width = this.cvs.width = 2560;\r\n        this.height = this.cvs.height = 1440;\r\n        this.width = this.cvs.width = cvs.offsetWidth * window.devicePixelRatio;\r\n        this.height = this.cvs.height = cvs.offsetHeight * window.devicePixelRatio;\r\n        window.addEventListener('resize', () => {\r\n            this.width = this.cvs.width = cvs.offsetWidth * window.devicePixelRatio;\r\n            this.height = this.cvs.height = cvs.offsetHeight * window.devicePixelRatio;\r\n        });\r\n        this._init();\r\n        this._onEnterFrame();\r\n    }\r\n\r\n    _init() {\r\n        const { cvs, cvsCtx, width, height, speed, connectDistance } = this;\r\n        this.particles[0] = new Particle({\r\n            cvsCtx,\r\n            x: 0,\r\n            y: 0,\r\n            vx: 0,\r\n            vy: 0,\r\n        });\r\n        for (let i = 1; i < this.total; i++) {\r\n            const rad = (Math.random() * 2 - 1) * Math.PI;\r\n            this.particles[i] = new Particle({\r\n                cvsCtx,\r\n                x: Math.random() * (width + 2 * connectDistance) - connectDistance,\r\n                y: Math.random() * (height + 2 * connectDistance) - connectDistance,\r\n                vx: Math.cos(rad) * speed,\r\n                vy: Math.sin(rad) * speed,\r\n            });\r\n        }\r\n        cvs.addEventListener('mousemove', this._onMouseMove);\r\n        cvs.addEventListener('click', this._onClick);\r\n    }\r\n\r\n    _onEnterFrame = () => {\r\n        const { cvsCtx, width, height, connectDistance } = this;\r\n        cvsCtx.clearRect(0, 0, width, height);\r\n        cvsCtx.fillStyle = '#000000';\r\n        cvsCtx.fillRect(0, 0, width, height);\r\n        this.particles = this.particles.filter(item => {\r\n            const { x, y } = item;\r\n            const alive =\r\n                x >= -connectDistance &&\r\n                y >= -connectDistance &&\r\n                x <= width + connectDistance &&\r\n                y <= height + connectDistance;\r\n            return alive && item.render(), alive;\r\n        });\r\n        for (let i = 0; i < this.total - this.particles.length; i++) {\r\n            this.particles.push(this.randomParticle);\r\n        }\r\n        this._interact();\r\n        requestAnimationFrame(this._onEnterFrame);\r\n    };\r\n\r\n    _interact() {\r\n        const { cvsCtx, particles, connectDistance, flag } = this;\r\n        const l = particles.length;\r\n        for (let i = 0; i < l - 1; i++) {\r\n            const a = particles[i];\r\n            for (let j = i + 1; j < l; j++) {\r\n                const b = particles[j];\r\n                const d = ((a.x - b.x) ** 2 + (a.y - b.y) ** 2) ** 0.5;\r\n\r\n                if (a.isMouse) {\r\n                    const r = flag ? connectDistance : connectDistance * 0.6;\r\n                    if (d <= r * (flag ? 1 : 2)) {\r\n                        const c = flag ? 40000 : 20000;\r\n                        const rad = Math.atan2(a.y - b.y, a.x - b.x);\r\n                        b.ax = Math.cos(rad) * c * ((d - r) / r);\r\n                        b.ay = Math.sin(rad) * c * ((d - r) / r);\r\n                    } else {\r\n                        b.ax = 0;\r\n                        b.ay = 0;\r\n                    }\r\n                }\r\n\r\n                /* 连线 */\r\n                if (d <= connectDistance) {\r\n                    cvsCtx.beginPath();\r\n                    cvsCtx.lineWidth = 1;\r\n                    cvsCtx.lineCap = 'round';\r\n                    cvsCtx.strokeStyle = `rgba(255,255,255,${1 - d / connectDistance})`;\r\n                    cvsCtx.moveTo(a.x, a.y);\r\n                    cvsCtx.lineTo(b.x, b.y);\r\n                    cvsCtx.stroke();\r\n                    cvsCtx.closePath();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onMouseMove = e => {\r\n        const { offsetX: x, offsetY: y } = e;\r\n        const {\r\n            width,\r\n            height,\r\n            cvs: { offsetWidth: w, offsetHeight: h },\r\n        } = this;\r\n        const mouse = this.particles[0];\r\n        mouse.isMouse = true;\r\n        mouse.x = x * (width / w);\r\n        mouse.y = y * (height / h);\r\n    };\r\n\r\n    _onClick = e => {\r\n        this.flag = !this.flag;\r\n    };\r\n}\r\n\r\nnew ParticleGrid(cvs);\r\n"],"file":"script.babel.js"}