function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}function _classPrivateFieldSet(receiver,privateMap,value){var descriptor=privateMap.get(receiver);if(!descriptor){throw new TypeError("attempted to set private field on non-instance")}if(descriptor.set){descriptor.set.call(receiver,value)}else{if(!descriptor.writable){throw new TypeError("attempted to set read only private field")}descriptor.value=value}return value}function _classPrivateFieldGet(receiver,privateMap){var descriptor=privateMap.get(receiver);if(!descriptor){throw new TypeError("attempted to get private field on non-instance")}if(descriptor.get){return descriptor.get.call(receiver)}return descriptor.value}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function")}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o};return _setPrototypeOf(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call}return _assertThisInitialized(self)}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return self}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true}catch(e){return false}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _classStaticPrivateFieldSpecGet(receiver,classConstructor,descriptor){if(receiver!==classConstructor){throw new TypeError("Private static access of wrong provenance")}if(descriptor.get){return descriptor.get.call(receiver)}return descriptor.value}var View=function(){function View(){_classCallCheck(this,View);_defineProperty(this,"$elm",null);_defineProperty(this,"$weeks",null);_defineProperty(this,"$numbers",null);_defineProperty(this,"$dots",null);_defineProperty(this,"$amPm",null);this.$elm=document.querySelector(".e-clock");this.$weeks=this.$elm.querySelectorAll(".day");this.$numbers=this.$elm.querySelectorAll(".number");this.$dots=this.$elm.querySelectorAll(".dot");this.$amPm=this.$elm.querySelector(".am-pm")}_createClass(View,[{key:"blinkDot",value:function blinkDot(flag){this.$dots.forEach(function(elm){if(flag){elm.classList.add("blink")}else{elm.classList.remove("blink")}})}},{key:"renderWeek",value:function renderWeek(day){this.$weeks.forEach(function($item,i){if(i===day){$item.classList.add("active")}else{$item.classList.remove("active")}})}},{key:"renderNum",value:function renderNum(str){if(typeof str!=="string"){str=str.toString()}for(var i=0;i<str.length&&i<6;i++){this.$numbers[i].querySelectorAll(".branch.active").forEach(function(elm){return elm.classList.remove("active")});this.$numbers[i].querySelectorAll(_classStaticPrivateFieldSpecGet(View,View,_numMap)[str[i]]).forEach(function(elm){return elm.classList.add("active")})}}},{key:"renderAmPm",value:function renderAmPm(H){this.$amPm.innerText=H>12?"PM":"AM"}}]);return View}();var _numMap={writable:true,value:{0:".top.left,.top.center,.top.right,.bottom.right,.bottom.center,.bottom.left",1:".top.right,.bottom.right",2:".top.center,.top.right,.middle.center,.bottom.left,.bottom.center",3:".top.center,.top.right,.middle.center,.bottom.right,.bottom.center",4:".top.left,.top.right,.middle.center,.bottom.right",5:".top.left,.top.center,.middle.center,.bottom.right,.bottom.center",6:".top.left,.top.center,.middle.center,.bottom.right,.bottom.center,.bottom.left",7:".top.center,.top.right,.bottom.right",8:".top.left,.top.center,.top.right,.middle.center,.bottom.right,.bottom.center,.bottom.left",9:".top.left,.top.center,.top.right,.middle.center,.bottom.right,.bottom.center"}};var State=function State(view,model){_classCallCheck(this,State);_defineProperty(this,"view",null);_defineProperty(this,"model",null);console.log(view,model);this.model=model;this.view=view};var StateTime=function(_State){_inherits(StateTime,_State);var _super=_createSuper(StateTime);function StateTime(view,model){_classCallCheck(this,StateTime);return _super.call(this,view,model)}_createClass(StateTime,[{key:"update",value:function update(){this.view.renderWeek(this.model.day);this.view.renderNum(this.model.timeNum);this.view.renderAmPm(this.model.H)}}]);return StateTime}(State);var _stateMap=new WeakMap;var _state=new WeakMap;var _date=new WeakMap;var _isValidDate=new WeakMap;var _alarmTime=new WeakMap;var Model=function(){function Model(view){_classCallCheck(this,Model);_defineProperty(this,"view",null);_stateMap.set(this,{writable:true,value:{0:null,1:null,2:null,3:null,4:null,5:null,6:null,7:null}});_state.set(this,{writable:true,value:0});_date.set(this,{writable:true,value:null});_isValidDate.set(this,{writable:true,value:function value(date){return date instanceof Date&&!isNaN(date.getTime())}});_defineProperty(this,"hour12",true);_alarmTime.set(this,{writable:true,value:"000000"});this.view=view;_classPrivateFieldGet(this,_stateMap)[0]=new StateTime(this.view,this)}_createClass(Model,[{key:"state",get:function get(){return _classPrivateFieldGet(this,_stateMap)[_classPrivateFieldGet(this,_state)]}},{key:"date",get:function get(){return _classPrivateFieldGet(this,_date)},set:function set(v){if(!(v instanceof Date)){v=new Date(v)}if(!_classPrivateFieldGet(this,_isValidDate).call(this,v)){return}_classPrivateFieldSet(this,_date,v)}},{key:"day",get:function get(){return this.date.getDay()}},{key:"H",get:function get(){return this.date.getHours()}},{key:"HH",get:function get(){return this.H.toString().padStart(2,"0")}},{key:"h",get:function get(){return(this.H-1)%12+1}},{key:"hh",get:function get(){return this.h.toString().padStart(2,"0")}},{key:"m",get:function get(){return this.date.getMinutes()}},{key:"mm",get:function get(){return this.m.toString().padStart(2,"0")}},{key:"s",get:function get(){return this.date.getSeconds()}},{key:"ss",get:function get(){return this.s.toString().padStart(2,"0")}},{key:"timeNum",get:function get(){return(this.hour12?this.hh:this.HH)+this.mm+this.ss}},{key:"alarmTime",set:function set(v){_classPrivateFieldSet(this,_alarmTime,v)}},{key:"isTimeUp",get:function get(){return _classPrivateFieldGet(this,_alarmTime)===this.timeNum}}]);return Model}();var Clock=function Clock(){var _this=this;_classCallCheck(this,Clock);_defineProperty(this,"view",null);_defineProperty(this,"model",null);this.view=new View;this.model=new Model(this.view);setInterval(function(){_this.model.date=new Date;_this.model.state.update()},1000)};var clock=new Clock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJWaWV3IiwiJGVsbSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIiR3ZWVrcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCIkbnVtYmVycyIsIiRkb3RzIiwiJGFtUG0iLCJmbGFnIiwiZm9yRWFjaCIsImVsbSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImRheSIsIiRpdGVtIiwiaSIsInN0ciIsInRvU3RyaW5nIiwibGVuZ3RoIiwiSCIsImlubmVyVGV4dCIsIlN0YXRlIiwidmlldyIsIm1vZGVsIiwiY29uc29sZSIsImxvZyIsIlN0YXRlVGltZSIsInJlbmRlcldlZWsiLCJyZW5kZXJOdW0iLCJ0aW1lTnVtIiwicmVuZGVyQW1QbSIsIk1vZGVsIiwiZGF0ZSIsIkRhdGUiLCJpc05hTiIsImdldFRpbWUiLCJ2IiwiZ2V0RGF5IiwiZ2V0SG91cnMiLCJwYWRTdGFydCIsImgiLCJnZXRNaW51dGVzIiwibSIsImdldFNlY29uZHMiLCJzIiwiaG91cjEyIiwiaGgiLCJISCIsIm1tIiwic3MiLCJDbG9jayIsInNldEludGVydmFsIiwic3RhdGUiLCJ1cGRhdGUiLCJjbG9jayJdLCJtYXBwaW5ncyI6InluSEFBTUEsQ0FBQUEsSSxZQW9CRixlQUFjLHdEQU5QLElBTU8sZ0NBTEwsSUFLSyxrQ0FKSCxJQUlHLCtCQUhOLElBR00sK0JBRk4sSUFFTSxFQUNWLEtBQUtDLElBQUwsQ0FBWUMsUUFBUSxDQUFDQyxhQUFULENBQXVCLFVBQXZCLENBQVosQ0FDQSxLQUFLQyxNQUFMLENBQWMsS0FBS0gsSUFBTCxDQUFVSSxnQkFBVixDQUEyQixNQUEzQixDQUFkLENBQ0EsS0FBS0MsUUFBTCxDQUFnQixLQUFLTCxJQUFMLENBQVVJLGdCQUFWLENBQTJCLFNBQTNCLENBQWhCLENBQ0EsS0FBS0UsS0FBTCxDQUFhLEtBQUtOLElBQUwsQ0FBVUksZ0JBQVYsQ0FBMkIsTUFBM0IsQ0FBYixDQUNBLEtBQUtHLEtBQUwsQ0FBYSxLQUFLUCxJQUFMLENBQVVFLGFBQVYsQ0FBd0IsUUFBeEIsQ0FDaEIsQyx5Q0FNRCxrQkFBU00sSUFBVCxDQUFlLENBQ1gsS0FBS0YsS0FBTCxDQUFXRyxPQUFYLENBQW1CLFNBQUFDLEdBQUcsQ0FBSSxDQUN0QixHQUFJRixJQUFKLENBQVUsQ0FDTkUsR0FBRyxDQUFDQyxTQUFKLENBQWNDLEdBQWQsQ0FBa0IsT0FBbEIsQ0FDSCxDQUZELElBRU8sQ0FDSEYsR0FBRyxDQUFDQyxTQUFKLENBQWNFLE1BQWQsQ0FBcUIsT0FBckIsQ0FDSCxDQUNKLENBTkQsQ0FPSCxDLDBCQU1ELG9CQUFXQyxHQUFYLENBQWdCLENBQ1osS0FBS1gsTUFBTCxDQUFZTSxPQUFaLENBQW9CLFNBQUNNLEtBQUQsQ0FBUUMsQ0FBUixDQUFjLENBQzlCLEdBQUlBLENBQUMsR0FBS0YsR0FBVixDQUFlLENBQ1hDLEtBQUssQ0FBQ0osU0FBTixDQUFnQkMsR0FBaEIsQ0FBb0IsUUFBcEIsQ0FDSCxDQUZELElBRU8sQ0FDSEcsS0FBSyxDQUFDSixTQUFOLENBQWdCRSxNQUFoQixDQUF1QixRQUF2QixDQUNILENBQ0osQ0FORCxDQU9ILEMseUJBTUQsbUJBQVVJLEdBQVYsQ0FBZSxDQUNYLEdBQUksTUFBT0EsQ0FBQUEsR0FBUCxHQUFlLFFBQW5CLENBQTZCLENBQ3pCQSxHQUFHLENBQUdBLEdBQUcsQ0FBQ0MsUUFBSixFQUNULENBRUQsSUFBSyxHQUFJRixDQUFBQSxDQUFDLENBQUcsQ0FBYixDQUFnQkEsQ0FBQyxDQUFHQyxHQUFHLENBQUNFLE1BQVIsRUFBa0JILENBQUMsQ0FBRyxDQUF0QyxDQUF5Q0EsQ0FBQyxFQUExQyxDQUE4QyxDQUMxQyxLQUFLWCxRQUFMLENBQWNXLENBQWQsRUFBaUJaLGdCQUFqQixDQUFrQyxnQkFBbEMsRUFBb0RLLE9BQXBELENBQTRELFNBQUFDLEdBQUcsUUFBSUEsQ0FBQUEsR0FBRyxDQUFDQyxTQUFKLENBQWNFLE1BQWQsQ0FBcUIsUUFBckIsQ0FBSixDQUEvRCxFQUNBLEtBQUtSLFFBQUwsQ0FBY1csQ0FBZCxFQUFpQlosZ0JBQWpCLENBQWtDLGdDQUFBTCxJQUFJLENBbkU1Q0EsSUFtRTRDLFNBQUosQ0FBYWtCLEdBQUcsQ0FBQ0QsQ0FBRCxDQUFoQixDQUFsQyxFQUF3RFAsT0FBeEQsQ0FBZ0UsU0FBQUMsR0FBRyxRQUFJQSxDQUFBQSxHQUFHLENBQUNDLFNBQUosQ0FBY0MsR0FBZCxDQUFrQixRQUFsQixDQUFKLENBQW5FLENBQ0gsQ0FDSixDLDBCQU1ELG9CQUFXUSxDQUFYLENBQWMsQ0FDVixLQUFLYixLQUFMLENBQVdjLFNBQVgsQ0FBdUJELENBQUMsQ0FBRyxFQUFKLENBQVMsSUFBVCxDQUFnQixJQUMxQyxDLG9EQTVFZ0IsQ0FDYixFQUFHLDRFQURVLENBRWIsRUFBRywwQkFGVSxDQUdiLEVBQUcsbUVBSFUsQ0FJYixFQUFHLG9FQUpVLENBS2IsRUFBRyxtREFMVSxDQU1iLEVBQUcsbUVBTlUsQ0FPYixFQUFHLGdGQVBVLENBUWIsRUFBRyxzQ0FSVSxDQVNiLEVBQUcsMkZBVFUsQ0FVYixFQUFHLDhFQVZVLEMsS0ErRWZFLENBQUFBLEssQ0FJRixlQUFZQyxJQUFaLENBQWtCQyxLQUFsQixDQUF5Qix5REFIbEIsSUFHa0IsK0JBRmpCLElBRWlCLEVBQ3JCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsSUFBWixDQUFrQkMsS0FBbEIsRUFDQSxLQUFLQSxLQUFMLENBQWFBLEtBQWIsQ0FDQSxLQUFLRCxJQUFMLENBQVlBLElBQ2YsQyxJQUdDSSxDQUFBQSxTLGlGQUNGLG1CQUFZSixJQUFaLENBQWtCQyxLQUFsQixDQUF5Qix5REFDZkQsSUFEZSxDQUNUQyxLQURTLENBRXhCLEMsNENBRUQsaUJBQVMsQ0FDTCxLQUFLRCxJQUFMLENBQVVLLFVBQVYsQ0FBcUIsS0FBS0osS0FBTCxDQUFXVixHQUFoQyxFQUNBLEtBQUtTLElBQUwsQ0FBVU0sU0FBVixDQUFvQixLQUFLTCxLQUFMLENBQVdNLE9BQS9CLEVBQ0EsS0FBS1AsSUFBTCxDQUFVUSxVQUFWLENBQXFCLEtBQUtQLEtBQUwsQ0FBV0osQ0FBaEMsQ0FDSCxDLHNCQVRtQkUsSyxvSUFZbEJVLENBQUFBLEssWUE2RUYsZUFBWVQsSUFBWixDQUFrQix5REE1RVgsSUE0RVcsMENBMUVOLENBQ1IsRUFBRyxJQURLLENBRVIsRUFBRyxJQUZLLENBR1IsRUFBRyxJQUhLLENBSVIsRUFBRyxJQUpLLENBS1IsRUFBRyxJQUxLLENBTVIsRUFBRyxJQU5LLENBT1IsRUFBRyxJQVBLLENBUVIsRUFBRyxJQVJLLENBMEVNLHdDQWhFVCxDQWdFUyx1Q0EzRFYsSUEyRFUsOENBN0NILGVBQUFVLElBQUksQ0FBSSxDQUNuQixNQUFPQSxDQUFBQSxJQUFJLFdBQVlDLENBQUFBLElBQWhCLEVBQXdCLENBQUNDLEtBQUssQ0FBQ0YsSUFBSSxDQUFDRyxPQUFMLEVBQUQsQ0FDeEMsQ0EyQ2lCLGlDQXpDVCxJQXlDUywyQ0FSTCxRQVFLLEdBQ2QsS0FBS2IsSUFBTCxDQUFZQSxJQUFaLENBQ0Esc0NBQWUsQ0FBZixFQUFvQixHQUFJSSxDQUFBQSxTQUFKLENBQWMsS0FBS0osSUFBbkIsQ0FBeUIsSUFBekIsQ0FDdkIsQyxxQ0FsRUQsY0FBWSxDQUNSLE1BQU8sNkRBQWUsSUFBZixTQUNWLEMsa0JBR0QsY0FBVyxDQUNQLDZCQUFPLElBQVAsT0FDSCxDLEtBQ0QsYUFBU2MsQ0FBVCxDQUFZLENBQ1IsR0FBSSxFQUFFQSxDQUFDLFdBQVlILENBQUFBLElBQWYsQ0FBSixDQUEwQixDQUN0QkcsQ0FBQyxDQUFHLEdBQUlILENBQUFBLElBQUosQ0FBU0csQ0FBVCxDQUNQLENBQ0QsR0FBSSx1QkFBQyxJQUFELG9CQUFDLElBQUQsQ0FBbUJBLENBQW5CLENBQUosQ0FBMkIsQ0FDdkIsTUFDSCxDQUNELGlDQUFhQSxDQUFiLENBQ0gsQyxpQkFRRCxjQUFVLENBQ04sTUFBTyxNQUFLSixJQUFMLENBQVVLLE1BQVYsRUFDVixDLGVBQ0QsY0FBUSxDQUNKLE1BQU8sTUFBS0wsSUFBTCxDQUFVTSxRQUFWLEVBQ1YsQyxnQkFDRCxjQUFTLENBQ0wsTUFBTyxNQUFLbkIsQ0FBTCxDQUFPRixRQUFQLEdBQWtCc0IsUUFBbEIsQ0FBMkIsQ0FBM0IsQ0FBOEIsR0FBOUIsQ0FDVixDLGVBQ0QsY0FBUSxDQUNKLE1BQVEsQ0FBQyxLQUFLcEIsQ0FBTCxDQUFTLENBQVYsRUFBZSxFQUFoQixDQUFzQixDQUNoQyxDLGdCQUNELGNBQVMsQ0FDTCxNQUFPLE1BQUtxQixDQUFMLENBQU92QixRQUFQLEdBQWtCc0IsUUFBbEIsQ0FBMkIsQ0FBM0IsQ0FBOEIsR0FBOUIsQ0FDVixDLGVBQ0QsY0FBUSxDQUNKLE1BQU8sTUFBS1AsSUFBTCxDQUFVUyxVQUFWLEVBQ1YsQyxnQkFDRCxjQUFTLENBQ0wsTUFBTyxNQUFLQyxDQUFMLENBQU96QixRQUFQLEdBQWtCc0IsUUFBbEIsQ0FBMkIsQ0FBM0IsQ0FBOEIsR0FBOUIsQ0FDVixDLGVBQ0QsY0FBUSxDQUNKLE1BQU8sTUFBS1AsSUFBTCxDQUFVVyxVQUFWLEVBQ1YsQyxnQkFDRCxjQUFTLENBQ0wsTUFBTyxNQUFLQyxDQUFMLENBQU8zQixRQUFQLEdBQWtCc0IsUUFBbEIsQ0FBMkIsQ0FBM0IsQ0FBOEIsR0FBOUIsQ0FDVixDLHFCQUNELGNBQWMsQ0FDVixNQUFPLENBQUMsS0FBS00sTUFBTCxDQUFjLEtBQUtDLEVBQW5CLENBQXdCLEtBQUtDLEVBQTlCLEVBQW9DLEtBQUtDLEVBQXpDLENBQThDLEtBQUtDLEVBQzdELEMsdUJBR0QsYUFBY2IsQ0FBZCxDQUFpQixDQUNiLHNDQUFrQkEsQ0FBbEIsQ0FDSCxDLHNCQUNELGNBQWUsQ0FDWCxNQUFPLDBDQUFvQixLQUFLUCxPQUNuQyxDLHVCQVFDcUIsQ0FBQUEsSyxDQUlGLGdCQUFjLHdFQUhQLElBR08sK0JBRk4sSUFFTSxFQUNWLEtBQUs1QixJQUFMLENBQVksR0FBSXhCLENBQUFBLElBQWhCLENBQ0EsS0FBS3lCLEtBQUwsQ0FBYSxHQUFJUSxDQUFBQSxLQUFKLENBQVUsS0FBS1QsSUFBZixDQUFiLENBRUE2QixXQUFXLENBQUMsVUFBTSxDQUNkLEtBQUksQ0FBQzVCLEtBQUwsQ0FBV1MsSUFBWCxDQUFrQixHQUFJQyxDQUFBQSxJQUF0QixDQUNBLEtBQUksQ0FBQ1YsS0FBTCxDQUFXNkIsS0FBWCxDQUFpQkMsTUFBakIsRUFDSCxDQUhVLENBR1IsSUFIUSxDQUlkLEMsQ0FHTCxHQUFNQyxDQUFBQSxLQUFLLENBQUcsR0FBSUosQ0FBQUEsS0FBbEIiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBWaWV3IHtcclxuICAgIHN0YXRpYyAjbnVtTWFwID0ge1xyXG4gICAgICAgIDA6ICcudG9wLmxlZnQsLnRvcC5jZW50ZXIsLnRvcC5yaWdodCwuYm90dG9tLnJpZ2h0LC5ib3R0b20uY2VudGVyLC5ib3R0b20ubGVmdCcsXHJcbiAgICAgICAgMTogJy50b3AucmlnaHQsLmJvdHRvbS5yaWdodCcsXHJcbiAgICAgICAgMjogJy50b3AuY2VudGVyLC50b3AucmlnaHQsLm1pZGRsZS5jZW50ZXIsLmJvdHRvbS5sZWZ0LC5ib3R0b20uY2VudGVyJyxcclxuICAgICAgICAzOiAnLnRvcC5jZW50ZXIsLnRvcC5yaWdodCwubWlkZGxlLmNlbnRlciwuYm90dG9tLnJpZ2h0LC5ib3R0b20uY2VudGVyJyxcclxuICAgICAgICA0OiAnLnRvcC5sZWZ0LC50b3AucmlnaHQsLm1pZGRsZS5jZW50ZXIsLmJvdHRvbS5yaWdodCcsXHJcbiAgICAgICAgNTogJy50b3AubGVmdCwudG9wLmNlbnRlciwubWlkZGxlLmNlbnRlciwuYm90dG9tLnJpZ2h0LC5ib3R0b20uY2VudGVyJyxcclxuICAgICAgICA2OiAnLnRvcC5sZWZ0LC50b3AuY2VudGVyLC5taWRkbGUuY2VudGVyLC5ib3R0b20ucmlnaHQsLmJvdHRvbS5jZW50ZXIsLmJvdHRvbS5sZWZ0JyxcclxuICAgICAgICA3OiAnLnRvcC5jZW50ZXIsLnRvcC5yaWdodCwuYm90dG9tLnJpZ2h0JyxcclxuICAgICAgICA4OiAnLnRvcC5sZWZ0LC50b3AuY2VudGVyLC50b3AucmlnaHQsLm1pZGRsZS5jZW50ZXIsLmJvdHRvbS5yaWdodCwuYm90dG9tLmNlbnRlciwuYm90dG9tLmxlZnQnLFxyXG4gICAgICAgIDk6ICcudG9wLmxlZnQsLnRvcC5jZW50ZXIsLnRvcC5yaWdodCwubWlkZGxlLmNlbnRlciwuYm90dG9tLnJpZ2h0LC5ib3R0b20uY2VudGVyJyxcclxuICAgIH07XHJcblxyXG4gICAgJGVsbSA9IG51bGw7XHJcbiAgICAkd2Vla3MgPSBudWxsO1xyXG4gICAgJG51bWJlcnMgPSBudWxsO1xyXG4gICAgJGRvdHMgPSBudWxsO1xyXG4gICAgJGFtUG0gPSBudWxsO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuJGVsbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lLWNsb2NrJyk7XHJcbiAgICAgICAgdGhpcy4kd2Vla3MgPSB0aGlzLiRlbG0ucXVlcnlTZWxlY3RvckFsbCgnLmRheScpO1xyXG4gICAgICAgIHRoaXMuJG51bWJlcnMgPSB0aGlzLiRlbG0ucXVlcnlTZWxlY3RvckFsbCgnLm51bWJlcicpO1xyXG4gICAgICAgIHRoaXMuJGRvdHMgPSB0aGlzLiRlbG0ucXVlcnlTZWxlY3RvckFsbCgnLmRvdCcpO1xyXG4gICAgICAgIHRoaXMuJGFtUG0gPSB0aGlzLiRlbG0ucXVlcnlTZWxlY3RvcignLmFtLXBtJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlhpLlj7fpl6rng4FcclxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gZmxhZ1xyXG4gICAgICovXHJcbiAgICBibGlua0RvdChmbGFnKSB7XHJcbiAgICAgICAgdGhpcy4kZG90cy5mb3JFYWNoKGVsbSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChmbGFnKSB7XHJcbiAgICAgICAgICAgICAgICBlbG0uY2xhc3NMaXN0LmFkZCgnYmxpbmsnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QucmVtb3ZlKCdibGluaycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmL7npLrmmJ/mnJ9cclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBkYXkg5pif5pyf77yM5pif5pyf5pel5Li6MFxyXG4gICAgICovXHJcbiAgICByZW5kZXJXZWVrKGRheSkge1xyXG4gICAgICAgIHRoaXMuJHdlZWtzLmZvckVhY2goKCRpdGVtLCBpKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpID09PSBkYXkpIHtcclxuICAgICAgICAgICAgICAgICRpdGVtLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYvuekuuaVsOWtl1xyXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHN0ciDmlbDlrZflrZfnrKbkuLLvvIzoh7PlpJo25L2N77yM5aSa5L2Z55qE5Lya6KKr5b+955WlXHJcbiAgICAgKi9cclxuICAgIHJlbmRlck51bShzdHIpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgc3RyID0gc3RyLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGggJiYgaSA8IDY7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLiRudW1iZXJzW2ldLnF1ZXJ5U2VsZWN0b3JBbGwoJy5icmFuY2guYWN0aXZlJykuZm9yRWFjaChlbG0gPT4gZWxtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpKTtcclxuICAgICAgICAgICAgdGhpcy4kbnVtYmVyc1tpXS5xdWVyeVNlbGVjdG9yQWxsKFZpZXcuI251bU1hcFtzdHJbaV1dKS5mb3JFYWNoKGVsbSA9PiBlbG0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJykpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYvuekukFN5oiWUE1cclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBIIDI05bCP5pe25Yi25bCP5pe25pWwXHJcbiAgICAgKi9cclxuICAgIHJlbmRlckFtUG0oSCkge1xyXG4gICAgICAgIHRoaXMuJGFtUG0uaW5uZXJUZXh0ID0gSCA+IDEyID8gJ1BNJyA6ICdBTSc7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFN0YXRlIHtcclxuICAgIHZpZXcgPSBudWxsO1xyXG4gICAgbW9kZWwgPSBudWxsO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHZpZXcsIG1vZGVsKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codmlldywgbW9kZWwpO1xyXG4gICAgICAgIHRoaXMubW9kZWwgPSBtb2RlbDtcclxuICAgICAgICB0aGlzLnZpZXcgPSB2aWV3O1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBTdGF0ZVRpbWUgZXh0ZW5kcyBTdGF0ZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih2aWV3LCBtb2RlbCkge1xyXG4gICAgICAgIHN1cGVyKHZpZXcsIG1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKSB7XHJcbiAgICAgICAgdGhpcy52aWV3LnJlbmRlcldlZWsodGhpcy5tb2RlbC5kYXkpO1xyXG4gICAgICAgIHRoaXMudmlldy5yZW5kZXJOdW0odGhpcy5tb2RlbC50aW1lTnVtKTtcclxuICAgICAgICB0aGlzLnZpZXcucmVuZGVyQW1QbSh0aGlzLm1vZGVsLkgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBNb2RlbCB7XHJcbiAgICB2aWV3ID0gbnVsbDtcclxuXHJcbiAgICAjc3RhdGVNYXAgPSB7XHJcbiAgICAgICAgMDogbnVsbCxcclxuICAgICAgICAxOiBudWxsLFxyXG4gICAgICAgIDI6IG51bGwsXHJcbiAgICAgICAgMzogbnVsbCxcclxuICAgICAgICA0OiBudWxsLFxyXG4gICAgICAgIDU6IG51bGwsXHJcbiAgICAgICAgNjogbnVsbCxcclxuICAgICAgICA3OiBudWxsLFxyXG4gICAgfTtcclxuICAgICNzdGF0ZSA9IDA7XHJcbiAgICBnZXQgc3RhdGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI3N0YXRlTWFwW3RoaXMuI3N0YXRlXTtcclxuICAgIH1cclxuXHJcbiAgICAjZGF0ZSA9IG51bGw7XHJcbiAgICBnZXQgZGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy4jZGF0ZTtcclxuICAgIH1cclxuICAgIHNldCBkYXRlKHYpIHtcclxuICAgICAgICBpZiAoISh2IGluc3RhbmNlb2YgRGF0ZSkpIHtcclxuICAgICAgICAgICAgdiA9IG5ldyBEYXRlKHYpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuI2lzVmFsaWREYXRlKHYpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy4jZGF0ZSA9IHY7XHJcbiAgICB9XHJcblxyXG4gICAgI2lzVmFsaWREYXRlID0gZGF0ZSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGRhdGUgaW5zdGFuY2VvZiBEYXRlICYmICFpc05hTihkYXRlLmdldFRpbWUoKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGhvdXIxMiA9IHRydWU7XHJcblxyXG4gICAgZ2V0IGRheSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kYXRlLmdldERheSgpO1xyXG4gICAgfVxyXG4gICAgZ2V0IEgoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZS5nZXRIb3VycygpO1xyXG4gICAgfVxyXG4gICAgZ2V0IEhIKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLkgudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpO1xyXG4gICAgfVxyXG4gICAgZ2V0IGgoKSB7XHJcbiAgICAgICAgcmV0dXJuICgodGhpcy5IIC0gMSkgJSAxMikgKyAxO1xyXG4gICAgfVxyXG4gICAgZ2V0IGhoKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmgudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpO1xyXG4gICAgfVxyXG4gICAgZ2V0IG0oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZS5nZXRNaW51dGVzKCk7XHJcbiAgICB9XHJcbiAgICBnZXQgbW0oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7XHJcbiAgICB9XHJcbiAgICBnZXQgcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kYXRlLmdldFNlY29uZHMoKTtcclxuICAgIH1cclxuICAgIGdldCBzcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTtcclxuICAgIH1cclxuICAgIGdldCB0aW1lTnVtKCkge1xyXG4gICAgICAgIHJldHVybiAodGhpcy5ob3VyMTIgPyB0aGlzLmhoIDogdGhpcy5ISCkgKyB0aGlzLm1tICsgdGhpcy5zcztcclxuICAgIH1cclxuXHJcbiAgICAjYWxhcm1UaW1lID0gJzAwMDAwMCc7XHJcbiAgICBzZXQgYWxhcm1UaW1lKHYpIHtcclxuICAgICAgICB0aGlzLiNhbGFybVRpbWUgPSB2O1xyXG4gICAgfVxyXG4gICAgZ2V0IGlzVGltZVVwKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLiNhbGFybVRpbWUgPT09IHRoaXMudGltZU51bTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih2aWV3KSB7XHJcbiAgICAgICAgdGhpcy52aWV3ID0gdmlldztcclxuICAgICAgICB0aGlzLiNzdGF0ZU1hcFswXSA9IG5ldyBTdGF0ZVRpbWUodGhpcy52aWV3LCB0aGlzKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgQ2xvY2sge1xyXG4gICAgdmlldyA9IG51bGw7XHJcbiAgICBtb2RlbCA9IG51bGw7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy52aWV3ID0gbmV3IFZpZXcoKTtcclxuICAgICAgICB0aGlzLm1vZGVsID0gbmV3IE1vZGVsKHRoaXMudmlldyk7XHJcblxyXG4gICAgICAgIHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5tb2RlbC5kYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgdGhpcy5tb2RlbC5zdGF0ZS51cGRhdGUoKTtcclxuICAgICAgICB9LCAxMDAwKTtcclxuICAgIH1cclxufVxyXG5cclxuY29uc3QgY2xvY2sgPSBuZXcgQ2xvY2soKTtcclxuIl19